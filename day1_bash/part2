#!/bin/bash

declare -A key_values=(
    [zero]="0" 
    [one]="1" 
    [two]="2" 
    [three]="3" 
    [four]="4" 
    [five]="5" 
    [six]="6" 
    [seven]="7" 
    [eight]="8" 
    [nine]="9"
    [0]="0" 
    [1]="1" 
    [2]="2" 
    [3]="3" 
    [4]="4" 
    [5]="5" 
    [6]="6" 
    [7]="7" 
    [8]="8" 
    [9]="9" 
)

num_in_string(){
    string=$1
    for number in ${!key_values[@]}; do
        value="${key_values[${number}]}"
        if [[ .*"$string".* =~ $number  ]]; then
            echo $value
            return 0
        fi
    done
    return 1
}

find_first_num () {
    local line=$1
    local i=0
    while [ $i -lt ${#line} ] ; do
        i=$(( $i + 1 ))
        num_in_string ${line:0:$i} && return 
    done
}

find_last_num () {
    local line=$1
    local i=${#line}
    while [ $i -gt 0 ] ; do
        i=$(( $i - 1 ))
        num_in_string ${line:$i:${#line}} && return 
    done
}


count=0
while read line; do
    first=$(find_first_num $line)
    last=$(find_last_num $line)
    count=$(($count + $(($first$last))))
done

echo "count  $count"
